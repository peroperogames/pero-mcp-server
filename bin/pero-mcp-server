#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

// 获取项目根目录
const projectRoot = path.dirname(__dirname);

// 检查 Python 是否安装
function checkPython() {
  return new Promise((resolve) => {
    const python = spawn('python', ['--version'], { stdio: 'pipe' });
    python.on('close', (code) => {
      if (code === 0) {
        resolve('python');
      } else {
        const python3 = spawn('python3', ['--version'], { stdio: 'pipe' });
        python3.on('close', (code) => {
          resolve(code === 0 ? 'python3' : null);
        });
      }
    });
  });
}

// 安装 Python 依赖
async function installDependencies(pythonCmd) {
  const requirementsPath = path.join(projectRoot, 'requirements.txt');

  if (fs.existsSync(requirementsPath)) {
    console.log('Installing Python dependencies...');
    return new Promise((resolve, reject) => {
      const pip = spawn(pythonCmd, ['-m', 'pip', 'install', '-r', requirementsPath], {
        stdio: 'inherit',
        cwd: projectRoot
      });

      pip.on('close', (code) => {
        if (code === 0) {
          console.log('Dependencies installed successfully.');
          resolve();
        } else {
          reject(new Error(`Failed to install dependencies. Exit code: ${code}`));
        }
      });
    });
  }
}

// 启动 Python 服务器
async function startServer(pythonCmd) {
  const serverPath = path.join(projectRoot, 'pero_mcp_server.py');

  console.log('Starting Pero MCP Server...');
  const server = spawn(pythonCmd, [serverPath], {
    stdio: 'inherit',
    cwd: projectRoot,
    env: { ...process.env }
  });

  server.on('close', (code) => {
    console.log(`Server exited with code ${code}`);
    process.exit(code);
  });

  server.on('error', (err) => {
    console.error('Failed to start server:', err);
    process.exit(1);
  });

  // 处理进程退出信号
  process.on('SIGINT', () => {
    console.log('\nShutting down server...');
    server.kill('SIGINT');
  });

  process.on('SIGTERM', () => {
    console.log('\nShutting down server...');
    server.kill('SIGTERM');
  });
}

// 主函数
async function main() {
  try {
    const pythonCmd = await checkPython();

    if (!pythonCmd) {
      console.error('Error: Python is not installed or not found in PATH.');
      console.error('Please install Python 3.8 or higher and try again.');
      process.exit(1);
    }

    console.log(`Using Python command: ${pythonCmd}`);

    // 安装依赖（如果需要）
    await installDependencies(pythonCmd);

    // 启动服务器
    await startServer(pythonCmd);

  } catch (error) {
    console.error('Error:', error.message);
    process.exit(1);
  }
}

main();
